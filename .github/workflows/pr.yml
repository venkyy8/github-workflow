name: Clone Repo, Modify File, Create Branch and Push Changes

on:
  push:
    branches:
      - main  # Adjust to your branch if needed

jobs:
  clone-modify-push:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Set up the GitHub username and token directly in the script
      - name: Set up environment variables for Git authentication
        run: |
          echo "GITHUB_USER=venkyy8" >> $GITHUB_ENV
          echo "PASSWORD1_TOKEN=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" >> $GITHUB_ENV

      # Step 2: Create Dockerfile
      - name: Create Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:20.04
          ARG GITHUB_USER
          ARG PASSWORD1_TOKEN
          WORKDIR /app
          RUN apt-get update && apt-get install -y git

          # Configure the GitHub token-based authentication for Git
          RUN git config --global credential.helper store
          RUN echo "https://${GITHUB_USER}:${PASSWORD1_TOKEN}@github.com" > ~/.git-credentials

          # Clone repository
          RUN git clone https://github.com/venkyy8/amd-yvsr.git /app/repository
          WORKDIR /app/repository

          # Create a new branch
          RUN git checkout -b new-branch

          # Modify the sample.txt file
          RUN echo "New data added to sample.txt" >> sample.txt

          # Commit and push changes to the new branch
          RUN git config --global user.name "GitHub Actions"
          RUN git config --global user.email "actions@github.com"
          RUN git add sample.txt
          RUN git commit -m "Updated sample.txt with new data"
          RUN git push --set-upstream origin new-branch

          CMD ["bash"]
          EOF

      # Step 3: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 4: Build the Docker image with build arguments for authentication
      - name: Build Docker Image
        run: |
          docker build --build-arg GITHUB_USER=venkyy8 --build-arg PASSWORD1_TOKEN=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 -t my-container .

      # Step 5: Run the Docker container
      - name: Run Docker Container
        run: |
          docker run --name my-container-instance -d my-container

      # Step 6: Clean up: Stop and remove the container
      - name: Clean up
        run: |
          docker stop my-container-instance
          docker rm my-container-instance
