name: Clone Repo, Modify File, Create Branch, Push Changes, and Create PR

on:
  push:
    branches:
      - main  # Adjust to your branch if needed

jobs:
  clone-modify-push-pr:
    runs-on: ubuntu-latest
    steps:

      # Step 1: Set up environment variables for Git authentication
      - name: Set up environment variables for Git authentication
        run: |
          echo "GITHUB_USER=venkyy8" >> $GITHUB_ENV
          echo "PASSWORD1_TOKEN=${{ secrets.PASSWORD1_TOKEN }}" >> $GITHUB_ENV
          echo "NEW_BRANCH=new-branch" >> $GITHUB_ENV

      # Step 2: Create Dockerfile
      - name: Create Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:20.04
          ARG GITHUB_USER
          ARG PASSWORD1_TOKEN
          ARG NEW_BRANCH
          WORKDIR /app

          # Install dependencies including Git, curl, and GitHub CLI
          RUN apt-get update && apt-get install -y git curl lsb-release
          RUN apt-get update && apt-get install gh

          # Configure git credentials
          RUN git config --global credential.helper store
          RUN echo "https://${GITHUB_USER}:${PASSWORD1_TOKEN}@github.com" > ~/.git-credentials

          # Clone the repository and setup the branch
          RUN git clone https://github.com/venkyy8/amd-yvsr.git /app/repository
          WORKDIR /app/repository
          RUN git checkout -b ${NEW_BRANCH}

          # Modify the file and commit changes
          RUN echo "New data added to sample.txt" >> sample.txt
          RUN git config --global user.name "GitHub Actions"
          RUN git config --global user.email "actions@github.com"
          RUN git add sample.txt
          RUN git commit -m "Updated sample.txt with new data"
          RUN git push --set-upstream origin ${NEW_BRANCH}

          # Keep the container running
          CMD ["tail", "-f", "/dev/null"]
          EOF

      # Step 3: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 4: Build the Docker image with build arguments for authentication
      - name: Build Docker Image
        run: |
          docker build --build-arg GITHUB_USER=venkyy8 --build-arg PASSWORD1_TOKEN=${{ secrets.PASSWORD1_TOKEN }} --build-arg NEW_BRANCH=new-branch -t my-container .

      # Step 5: Run the Docker container
      - name: Run Docker Container
        run: |
          docker run --name my-container-instance -d my-container

      # Step 6: Wait for the container to be fully set up
      - name: Wait for the container to be ready
        run: |
          sleep 20  # Adjust time as needed

      # Step 7: Authenticate GitHub CLI
      - name: Authenticate GitHub CLI
        run: |
          docker exec my-container-instance bash -c "gh auth login --with-token <<< '${{ secrets.PASSWORD1_TOKEN }}'"

      # Step 8: Create the Pull Request
      - name: Create Pull Request
        run: |
          docker exec my-container-instance bash -c "cd /app/repository && gh pr create --title '1st-PR' --body '@yvsr please review and merge' --base main --head $NEW_BRANCH"
          echo "PR Created"

      # Step 9: Add Reviewer to the PR
      - name: Add Reviewer to the PR
        run: |
          docker exec my-container-instance bash -c "gh pr edit --add-reviewer kasirao750"
          echo "Reviewer added"

      # Step 10: Clean up: Stop and remove the container
      - name: Clean up
        run: |
          docker stop my-container-instance
          docker rm my-container-instance
